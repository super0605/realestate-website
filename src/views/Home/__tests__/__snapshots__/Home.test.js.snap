// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomePage should render without problems 1`] = `
<ThemeProvider
  theme={
    Object {
      "components": Object {
        "button": Object {
          "buttonSecondary": Object {
            "blue": Object {
              "color": "#007aff",
              "hoverColor": "#f05324",
            },
            "checked": Object {
              "color": "#f05324",
            },
            "default": Object {
              "color": "#757575",
              "hoverColor": "#f05324",
            },
            "textStyle": Array [
              "
    font-family: Roboto;
    font-size: 14px;
    font-weight: 500;
    font-stretch: normal;
    font-style: normal;
    line-height: normal;
    letter-spacing: normal;
    color: \\"#757575\\";
  ",
            ],
            "unchecked": Object {
              "color": "#757575",
            },
          },
        },
      },
      "layout": Object {
        "footer": Object {
          "borderTop": "solid 1px #e0e0e0",
          "default": 42,
        },
        "sidebar": Object {
          "brand": Object {
            "bgColor": "#f05324",
            "height": 96,
          },
          "collapsed": 80,
          "default": 260,
          "menu": Object {
            "itemHeight": 56,
          },
          "sidebarShadow": "0 2px 4px 0 rgba(0, 0, 0, 0.06), 0 0 0 0 rgba(0, 0, 0, 0.07), 0 0px 1px -1px rgba(0, 0, 0, 0.06)",
        },
      },
      "spacings": Object {
        "spacing_l": "20px",
        "spacing_m": "16px",
        "spacing_s": "12px",
        "spacing_xl": "24px",
        "spacing_xs": "8px",
        "spacing_xxl": "28px",
        "spacing_xxl_2": "32px",
        "spacing_xxl_3": "36px",
        "spacing_xxs": "4px",
        "spacing_xxss": "6px",
        "spacing_xxxs": "2px",
      },
    }
  }
>
  <MockedProvider
    addTypename={false}
    mocks={
      Array [
        Object {
          "request": Object {
            "query": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GetProperties",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "filter",
                            },
                            "value": Object {
                              "fields": Array [
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "priceGte",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "priceGte",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "priceLte",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "priceLte",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pricePerSqmGte",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "pricePerSqmGte",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pricePerSqmLte",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "pricePerSqmLte",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "sqmGte",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "sqmGte",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "sqmLte",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "sqmLte",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "numberOfBedroom",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "numberOfBedroom",
                                    },
                                  },
                                },
                                Object {
                                  "kind": "ObjectField",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "numberOfBathroom",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "numberOfBathroom",
                                    },
                                  },
                                },
                              ],
                              "kind": "ObjectValue",
                            },
                          },
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "offset",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "offset",
                              },
                            },
                          },
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "limit",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "limit",
                              },
                            },
                          },
                        ],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "allApartments",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "title",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "sqm",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "price",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "pricePerSqm",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "numberOfBedrooms",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "numberOfBathrooms",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "picture",
                              },
                              "selectionSet": undefined,
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NonNullType",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "offset",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NonNullType",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "Int",
                          },
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "limit",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Float",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "priceLte",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Float",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "priceGte",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Float",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "pricePerSqmLte",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Float",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "pricePerSqmGte",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Float",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "sqmLte",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Float",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "sqmGte",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Int",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "numberOfBedroom",
                        },
                      },
                    },
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "Int",
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "numberOfBathroom",
                        },
                      },
                    },
                  ],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 747,
                "start": 0,
              },
            },
            "variables": Object {
              "limit": 12,
              "numberOfBathroom": 2,
              "numberOfBedroom": 3,
              "offset": 0,
              "priceGte": 25000,
              "priceLte": 500000,
              "pricePerSqmGte": 1000,
              "pricePerSqmLte": 5000,
              "sqmGte": 80,
              "sqmLte": 150,
            },
          },
          "result": Object {
            "data": Object {
              "allApartments": Array [
                Object {
                  "__typename": "Apartment",
                  "id": "QXBhcnRtZW50LTEwMDA=",
                  "numberOfBathrooms": 2,
                  "numberOfBedrooms": 3,
                  "picture": "house.jpg",
                  "price": 30000,
                  "pricePerSqm": 4000,
                  "sqm": 120,
                  "title": "Lillian West",
                },
              ],
            },
            "error": null,
            "loading": false,
          },
        },
      ]
    }
  >
    <ApolloProvider
      client={
        ApolloClient {
          "cache": InMemoryCache {
            "addTypename": false,
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Array [],
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Array [],
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": KeyTrie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {},
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Array [],
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Array [],
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {},
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": KeyTrie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Array [],
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Array [],
              "typePolicies": Object {},
              "usingPossibleTypes": false,
            },
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Array [],
            "watchDep": [Function],
            "watches": Array [],
          },
          "clearStoreCallbacks": Array [],
          "defaultOptions": Object {},
          "disableNetworkFetches": false,
          "link": MockLink {
            "addTypename": false,
            "mockedResponsesByKey": Object {
              "{\\"query\\":\\"query GetProperties($offset: Int!, $limit: Int!, $priceLte: Float, $priceGte: Float, $pricePerSqmLte: Float, $pricePerSqmGte: Float, $sqmLte: Float, $sqmGte: Float, $numberOfBedroom: Int, $numberOfBathroom: Int) {\\\\n  allApartments(filter: {priceGte: $priceGte, priceLte: $priceLte, pricePerSqmGte: $pricePerSqmGte, pricePerSqmLte: $pricePerSqmLte, sqmGte: $sqmGte, sqmLte: $sqmLte, numberOfBedroom: $numberOfBedroom, numberOfBathroom: $numberOfBathroom}, offset: $offset, limit: $limit) {\\\\n    id\\\\n    title\\\\n    sqm\\\\n    price\\\\n    pricePerSqm\\\\n    numberOfBedrooms\\\\n    numberOfBathrooms\\\\n    picture\\\\n  }\\\\n}\\\\n\\"}": Array [
                Object {
                  "request": Object {
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GetProperties",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "filter",
                                    },
                                    "value": Object {
                                      "fields": Array [
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "priceGte",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "priceGte",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "priceLte",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "priceLte",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "pricePerSqmGte",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "pricePerSqmGte",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "pricePerSqmLte",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "pricePerSqmLte",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "sqmGte",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "sqmGte",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "sqmLte",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "sqmLte",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "numberOfBedroom",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "numberOfBedroom",
                                            },
                                          },
                                        },
                                        Object {
                                          "kind": "ObjectField",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "numberOfBathroom",
                                          },
                                          "value": Object {
                                            "kind": "Variable",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "numberOfBathroom",
                                            },
                                          },
                                        },
                                      ],
                                      "kind": "ObjectValue",
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "offset",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "offset",
                                      },
                                    },
                                  },
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "limit",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "limit",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "allApartments",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "title",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "sqm",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "price",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "pricePerSqm",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "numberOfBedrooms",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "numberOfBathrooms",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "picture",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Int",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "offset",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Int",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "limit",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Float",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "priceLte",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Float",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "priceGte",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Float",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "pricePerSqmLte",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Float",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "pricePerSqmGte",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Float",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "sqmLte",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Float",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "sqmGte",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "numberOfBedroom",
                                },
                              },
                            },
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "Int",
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "numberOfBathroom",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 747,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "limit": 12,
                      "numberOfBathroom": 2,
                      "numberOfBedroom": 3,
                      "offset": 0,
                      "priceGte": 25000,
                      "priceLte": 500000,
                      "pricePerSqmGte": 1000,
                      "pricePerSqmLte": 5000,
                      "sqmGte": 80,
                      "sqmLte": 150,
                    },
                  },
                  "result": Object {
                    "data": Object {
                      "allApartments": Array [
                        Object {
                          "__typename": "Apartment",
                          "id": "QXBhcnRtZW50LTEwMDA=",
                          "numberOfBathrooms": 2,
                          "numberOfBedrooms": 3,
                          "picture": "house.jpg",
                          "price": 30000,
                          "pricePerSqm": 4000,
                          "sqm": 120,
                          "title": "Lillian West",
                        },
                      ],
                    },
                    "error": null,
                    "loading": false,
                  },
                },
              ],
            },
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": false,
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "resultCaching": true,
                "typePolicies": Object {},
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Array [],
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Array [],
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "optimisticData": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Array [],
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Array [],
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Array [],
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Array [],
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "storeReader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Array [],
              "watchDep": [Function],
              "watches": Array [],
            },
            "client": [Circular],
          },
          "mutate": [Function],
          "query": [Function],
          "queryDeduplication": true,
          "queryManager": QueryManager {
            "assumeImmutableResults": false,
            "cache": InMemoryCache {
              "addTypename": false,
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "resultCaching": true,
                "typePolicies": Object {},
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Array [],
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Array [],
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "optimisticData": Root {
                "canRead": [Function],
                "data": Object {},
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Array [],
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Array [],
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {},
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": KeyTrie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Array [],
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Array [],
                "typePolicies": Object {},
                "usingPossibleTypes": false,
              },
              "storeReader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Array [],
              "watchDep": [Function],
              "watches": Array [],
            },
            "clientAwareness": Object {
              "name": undefined,
              "version": undefined,
            },
            "fetchCancelFns": Array [],
            "inFlightLinkObservables": Array [],
            "link": MockLink {
              "addTypename": false,
              "mockedResponsesByKey": Object {
                "{\\"query\\":\\"query GetProperties($offset: Int!, $limit: Int!, $priceLte: Float, $priceGte: Float, $pricePerSqmLte: Float, $pricePerSqmGte: Float, $sqmLte: Float, $sqmGte: Float, $numberOfBedroom: Int, $numberOfBathroom: Int) {\\\\n  allApartments(filter: {priceGte: $priceGte, priceLte: $priceLte, pricePerSqmGte: $pricePerSqmGte, pricePerSqmLte: $pricePerSqmLte, sqmGte: $sqmGte, sqmLte: $sqmLte, numberOfBedroom: $numberOfBedroom, numberOfBathroom: $numberOfBathroom}, offset: $offset, limit: $limit) {\\\\n    id\\\\n    title\\\\n    sqm\\\\n    price\\\\n    pricePerSqm\\\\n    numberOfBedrooms\\\\n    numberOfBathrooms\\\\n    picture\\\\n  }\\\\n}\\\\n\\"}": Array [
                  Object {
                    "request": Object {
                      "query": Object {
                        "definitions": Array [
                          Object {
                            "directives": Array [],
                            "kind": "OperationDefinition",
                            "name": Object {
                              "kind": "Name",
                              "value": "GetProperties",
                            },
                            "operation": "query",
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [
                                    Object {
                                      "kind": "Argument",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "filter",
                                      },
                                      "value": Object {
                                        "fields": Array [
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "priceGte",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "priceGte",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "priceLte",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "priceLte",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "pricePerSqmGte",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "pricePerSqmGte",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "pricePerSqmLte",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "pricePerSqmLte",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "sqmGte",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "sqmGte",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "sqmLte",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "sqmLte",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "numberOfBedroom",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "numberOfBedroom",
                                              },
                                            },
                                          },
                                          Object {
                                            "kind": "ObjectField",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "numberOfBathroom",
                                            },
                                            "value": Object {
                                              "kind": "Variable",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "numberOfBathroom",
                                              },
                                            },
                                          },
                                        ],
                                        "kind": "ObjectValue",
                                      },
                                    },
                                    Object {
                                      "kind": "Argument",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "offset",
                                      },
                                      "value": Object {
                                        "kind": "Variable",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "offset",
                                        },
                                      },
                                    },
                                    Object {
                                      "kind": "Argument",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "limit",
                                      },
                                      "value": Object {
                                        "kind": "Variable",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "limit",
                                        },
                                      },
                                    },
                                  ],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "allApartments",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "title",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "sqm",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "price",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "pricePerSqm",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "numberOfBedrooms",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "numberOfBathrooms",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "picture",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                            "variableDefinitions": Array [
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NonNullType",
                                  "type": Object {
                                    "kind": "NamedType",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "Int",
                                    },
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "offset",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NonNullType",
                                  "type": Object {
                                    "kind": "NamedType",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "Int",
                                    },
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "limit",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Float",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "priceLte",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Float",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "priceGte",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Float",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pricePerSqmLte",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Float",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "pricePerSqmGte",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Float",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "sqmLte",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Float",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "sqmGte",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Int",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "numberOfBedroom",
                                  },
                                },
                              },
                              Object {
                                "defaultValue": undefined,
                                "directives": Array [],
                                "kind": "VariableDefinition",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "Int",
                                  },
                                },
                                "variable": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "numberOfBathroom",
                                  },
                                },
                              },
                            ],
                          },
                        ],
                        "kind": "Document",
                        "loc": Object {
                          "end": 747,
                          "start": 0,
                        },
                      },
                      "variables": Object {
                        "limit": 12,
                        "numberOfBathroom": 2,
                        "numberOfBedroom": 3,
                        "offset": 0,
                        "priceGte": 25000,
                        "priceLte": 500000,
                        "pricePerSqmGte": 1000,
                        "pricePerSqmLte": 5000,
                        "sqmGte": 80,
                        "sqmLte": 150,
                      },
                    },
                    "result": Object {
                      "data": Object {
                        "allApartments": Array [
                          Object {
                            "__typename": "Apartment",
                            "id": "QXBhcnRtZW50LTEwMDA=",
                            "numberOfBathrooms": 2,
                            "numberOfBedrooms": 3,
                            "picture": "house.jpg",
                            "price": 30000,
                            "pricePerSqm": 4000,
                            "sqm": 120,
                            "title": "Lillian West",
                          },
                        ],
                      },
                      "error": null,
                      "loading": false,
                    },
                  },
                ],
              },
            },
            "localState": LocalState {
              "cache": InMemoryCache {
                "addTypename": false,
                "config": Object {
                  "addTypename": false,
                  "dataIdFromObject": [Function],
                  "resultCaching": true,
                  "typePolicies": Object {},
                },
                "data": Root {
                  "canRead": [Function],
                  "data": Object {},
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": KeyTrie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Array [],
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Array [],
                    "typePolicies": Object {},
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {},
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": KeyTrie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "getFragmentDoc": [Function],
                "makeVar": [Function],
                "maybeBroadcastWatch": [Function],
                "optimisticData": Root {
                  "canRead": [Function],
                  "data": Object {},
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": KeyTrie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Array [],
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Array [],
                    "typePolicies": Object {},
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {},
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": KeyTrie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": KeyTrie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Array [],
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Array [],
                  "typePolicies": Object {},
                  "usingPossibleTypes": false,
                },
                "storeReader": StoreReader {
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
                "storeWriter": StoreWriter {
                  "cache": [Circular],
                  "reader": StoreReader {
                    "config": Object {
                      "addTypename": false,
                      "cache": [Circular],
                    },
                    "executeSelectionSet": [Function],
                    "executeSubSelectedArray": [Function],
                    "knownResults": WeakMap {},
                  },
                },
                "txCount": 0,
                "typenameDocumentCache": Array [],
                "watchDep": [Function],
                "watches": Array [],
              },
              "client": [Circular],
            },
            "mutationIdCounter": 1,
            "mutationStore": MutationStore {
              "store": Object {},
            },
            "onBroadcast": [Function],
            "queries": Array [],
            "queryDeduplication": true,
            "queryIdCounter": 1,
            "requestIdCounter": 1,
            "ssrMode": false,
            "transformCache": WeakMap {},
          },
          "reFetchObservableQueries": [Function],
          "resetStore": [Function],
          "resetStoreCallbacks": Array [],
          "typeDefs": undefined,
          "version": "local",
          "watchQuery": [Function],
        }
      }
    >
      <HomePage>
        <styled.div>
          <div
            className="sc-fzqPZZ gXikXH"
          >
            <FilterSection
              handleFilterOptions={[Function]}
            >
              <Styled(PBox)>
                <PBox
                  className="sc-fznZeY ioBsmw"
                >
                  <styled.div
                    className="sc-fznZeY ioBsmw"
                  >
                    <div
                      className="sc-fznKkj eIzwwl sc-fznZeY ioBsmw"
                    >
                      <styled.div>
                        <div
                          className="sc-fzokOt jsygkD"
                        >
                          <styled.div>
                            <div
                              className="sc-fzoyAV bocxUM"
                            >
                              Barcelona
                            </div>
                          </styled.div>
                          <styled.div>
                            <div
                              className="sc-fzpjYC gtUDFr"
                            >
                              <Button
                                block={false}
                                className="filter-btn"
                                ghost={false}
                                htmlType="button"
                                loading={false}
                                onClick={[Function]}
                              >
                                <Wave>
                                  <button
                                    className="ant-btn filter-btn"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <ForwardRef
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <CSSMotion
                                          internalRef={null}
                                          motionAppear={true}
                                          motionEnter={true}
                                          motionLeave={true}
                                          motionName="ant-btn-loading-icon-motion"
                                          onAppearActive={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        />
                                      </ForwardRef>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      Filter 
                                    </span>
                                    <ForwardRef(FilterOutlined)
                                      key=".1"
                                    >
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M880.1 154H143.9c-24.5 0-39.8 26.7-27.5 48L349 597.4V838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V597.4L907.7 202c12.2-21.3-3.1-48-27.6-48zM603.4 798H420.6V642h182.9v156zm9.6-236.6l-9.5 16.6h-183l-9.5-16.6L212.7 226h598.6L613 561.4z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "filter",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="filter"
                                          className="anticon anticon-filter"
                                          role="img"
                                        >
                                          <IconReact
                                            className=""
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M880.1 154H143.9c-24.5 0-39.8 26.7-27.5 48L349 597.4V838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V597.4L907.7 202c12.2-21.3-3.1-48-27.6-48zM603.4 798H420.6V642h182.9v156zm9.6-236.6l-9.5 16.6h-183l-9.5-16.6L212.7 226h598.6L613 561.4z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "filter",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className=""
                                              data-icon="filter"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-filter"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M880.1 154H143.9c-24.5 0-39.8 26.7-27.5 48L349 597.4V838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V597.4L907.7 202c12.2-21.3-3.1-48-27.6-48zM603.4 798H420.6V642h182.9v156zm9.6-236.6l-9.5 16.6h-183l-9.5-16.6L212.7 226h598.6L613 561.4z"
                                                key="svg-filter-svg-0"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(FilterOutlined)>
                                  </button>
                                </Wave>
                              </Button>
                            </div>
                          </styled.div>
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </PBox>
              </Styled(PBox)>
            </FilterSection>
            <styled.div
              isLoading={false}
              size="middle"
              whole={true}
            >
              <div
                className="sc-fzoKki chnBHU"
                size="middle"
              >
                <Spin
                  size="large"
                  spinning={true}
                  wrapperClassName=""
                >
                  <div
                    className="ant-spin ant-spin-lg ant-spin-spinning"
                  >
                    <span
                      className="ant-spin-dot ant-spin-dot-spin"
                    >
                      <i
                        className="ant-spin-dot-item"
                      />
                      <i
                        className="ant-spin-dot-item"
                      />
                      <i
                        className="ant-spin-dot-item"
                      />
                      <i
                        className="ant-spin-dot-item"
                      />
                    </span>
                  </div>
                </Spin>
              </div>
            </styled.div>
            <MainContentView
              apartments={
                Array [
                  Object {
                    "__typename": "Apartment",
                    "id": "QXBhcnRtZW50LTEwMDA=",
                    "numberOfBathrooms": 2,
                    "numberOfBedrooms": 3,
                    "picture": "house.jpg",
                    "price": 30000,
                    "pricePerSqm": 4000,
                    "sqm": 120,
                    "title": "Lillian West",
                  },
                ]
              }
              isLoading={false}
              onLoadMore={[Function]}
            >
              <ScrollBar
                className=""
                component="div"
                containerRef={[Function]}
                onSync={[Function]}
                onYReachEnd={[Function]}
                options={
                  Object {
                    "cancelable": false,
                    "suppressScrollX": true,
                    "wheelPropagation": false,
                  }
                }
              >
                <div>
                  <styled.div>
                    <div
                      className="sc-fzolEj bVAUBA"
                    >
                      <Row
                        gutter={
                          Object {
                            "lg": 32,
                            "md": 24,
                            "sm": 16,
                            "xs": 8,
                          }
                        }
                      >
                        <div
                          className="ant-row"
                          style={Object {}}
                        >
                          <Col
                            className="gutter-row"
                            key="0"
                            lg={8}
                            md={12}
                            sm={12}
                            xl={6}
                            xs={24}
                          >
                            <div
                              className="ant-col gutter-row ant-col-xs-24 ant-col-sm-12 ant-col-md-12 ant-col-lg-8 ant-col-xl-6"
                              style={Object {}}
                            >
                              <ProductCard
                                imgUrl="house.jpg"
                                numberOfBathrooms={2}
                                numberOfBedrooms={3}
                                price={30000}
                                pricePerSqm={4000}
                                sqm={120}
                                title="Lillian West"
                              >
                                <styled.div>
                                  <div
                                    className="sc-fzoiQi eidxvE"
                                  >
                                    <styled.div>
                                      <div
                                        className="sc-fzqARJ bOLdbD"
                                      >
                                        <img
                                          alt="example"
                                          src="house.jpg"
                                        />
                                        <styled.div>
                                          <div
                                            className="sc-fzpmMD dKoRLx"
                                          >
                                            <styled.div>
                                              <div
                                                className="sc-fznxKY gfAcsO"
                                              >
                                                <styled.div>
                                                  <div
                                                    className="sc-fznMAR bDpDEz"
                                                  >
                                                    <NumberFormat
                                                      allowEmptyFormatting={false}
                                                      allowLeadingZeros={false}
                                                      allowNegative={true}
                                                      decimalScale={0}
                                                      decimalSeparator="."
                                                      displayType="text"
                                                      fixedDecimalScale={false}
                                                      isAllowed={[Function]}
                                                      isNumericString={false}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseUp={[Function]}
                                                      onValueChange={[Function]}
                                                      prefix=""
                                                      suffix="€"
                                                      thousandSeparator={true}
                                                      thousandsGroupStyle="thousand"
                                                      type="text"
                                                      value={30000}
                                                    >
                                                      <span>
                                                        30,000€
                                                      </span>
                                                    </NumberFormat>
                                                  </div>
                                                </styled.div>
                                                <styled.div>
                                                  <div
                                                    className="sc-fznWOq gnIQmO"
                                                  >
                                                    <NumberFormat
                                                      allowEmptyFormatting={false}
                                                      allowLeadingZeros={false}
                                                      allowNegative={true}
                                                      decimalScale={3}
                                                      decimalSeparator="."
                                                      displayType="text"
                                                      fixedDecimalScale={false}
                                                      isAllowed={[Function]}
                                                      isNumericString={false}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseUp={[Function]}
                                                      onValueChange={[Function]}
                                                      prefix=""
                                                      suffix="€/m²"
                                                      thousandSeparator={true}
                                                      thousandsGroupStyle="thousand"
                                                      type="text"
                                                      value={4000}
                                                    >
                                                      <span>
                                                        4,000€/m²
                                                      </span>
                                                    </NumberFormat>
                                                  </div>
                                                </styled.div>
                                              </div>
                                            </styled.div>
                                          </div>
                                        </styled.div>
                                      </div>
                                    </styled.div>
                                    <styled.div>
                                      <div
                                        className="sc-fzqNqU gqZrqY"
                                      >
                                        Lillian West
                                      </div>
                                    </styled.div>
                                    <styled.div>
                                      <div
                                        className="sc-fzoyTs hoLNFS"
                                      >
                                        <styled.div>
                                          <div
                                            className="sc-fzoNJl bTYiXB"
                                          >
                                            <i
                                              className="fa fa-check-circle"
                                            />
                                             
                                            120
                                             m²
                                          </div>
                                        </styled.div>
                                        <Styled(Divider)>
                                          <Divider
                                            className="sc-fzoXWK cylrVd"
                                            color="#d9d9d9"
                                            height="20px"
                                            pBottom="0px"
                                            pLeft="0px"
                                            pRight="0px"
                                            pTop="0px"
                                            width="2px"
                                          >
                                            <styled.div
                                              height="20px"
                                              pBottom="0px"
                                              pleft="0px"
                                              pright="0px"
                                              ptop="0px"
                                              width="2px"
                                            >
                                              <div
                                                className="sc-fznJRM hJXRBM"
                                                height="20px"
                                                width="2px"
                                              >
                                                <styled.div
                                                  color="#d9d9d9"
                                                  height="20px"
                                                  pBottom="0px"
                                                  pleft="0px"
                                                  pright="0px"
                                                  ptop="0px"
                                                  width="2px"
                                                >
                                                  <div
                                                    className="sc-fznWqX loSdbN"
                                                    color="#d9d9d9"
                                                    height="20px"
                                                    width="2px"
                                                  />
                                                </styled.div>
                                              </div>
                                            </styled.div>
                                          </Divider>
                                        </Styled(Divider)>
                                        <styled.div>
                                          <div
                                            className="sc-fzoNJl bTYiXB"
                                          >
                                            <i
                                              className="fa fa-bed"
                                            />
                                             
                                            3
                                             habs.
                                          </div>
                                        </styled.div>
                                        <Styled(Divider)>
                                          <Divider
                                            className="sc-fzoXWK cylrVd"
                                            color="#d9d9d9"
                                            height="20px"
                                            pBottom="0px"
                                            pLeft="0px"
                                            pRight="0px"
                                            pTop="0px"
                                            width="2px"
                                          >
                                            <styled.div
                                              height="20px"
                                              pBottom="0px"
                                              pleft="0px"
                                              pright="0px"
                                              ptop="0px"
                                              width="2px"
                                            >
                                              <div
                                                className="sc-fznJRM hJXRBM"
                                                height="20px"
                                                width="2px"
                                              >
                                                <styled.div
                                                  color="#d9d9d9"
                                                  height="20px"
                                                  pBottom="0px"
                                                  pleft="0px"
                                                  pright="0px"
                                                  ptop="0px"
                                                  width="2px"
                                                >
                                                  <div
                                                    className="sc-fznWqX loSdbN"
                                                    color="#d9d9d9"
                                                    height="20px"
                                                    width="2px"
                                                  />
                                                </styled.div>
                                              </div>
                                            </styled.div>
                                          </Divider>
                                        </Styled(Divider)>
                                        <styled.div>
                                          <div
                                            className="sc-fzoNJl bTYiXB"
                                          >
                                            <i
                                              className="fa fa-bath"
                                            />
                                             
                                            2
                                             baños
                                          </div>
                                        </styled.div>
                                      </div>
                                    </styled.div>
                                  </div>
                                </styled.div>
                              </ProductCard>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </div>
                  </styled.div>
                </div>
              </ScrollBar>
            </MainContentView>
          </div>
        </styled.div>
      </HomePage>
    </ApolloProvider>
  </MockedProvider>
</ThemeProvider>
`;
