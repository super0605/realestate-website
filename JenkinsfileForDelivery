properties([
	buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '1', numToKeepStr: '1')),
	parameters([string(defaultValue: '', description: '', name: 'VERSION')])
])

pipeline {
	agent any
	triggers {
		pollSCM('H H(0-7) * * *')
	}

	tools {
		nodejs 'main'
	}
	
	stages {
		stage('Release') {
			steps {
				script {
					def ver = sh(
						returnStdout: true,
						script: """
							grep -o '"version":.*' package.json | head -1 |  grep -o '[^:,"version]*' | tail -1
						"""
					).trim()

					def version = env.VERSION ? "${env.VERSION}" : ver
					def tag = "${version}_${BUILD_TIMESTAMP}"

					echo 'Building..'
					echo "Version: ${version}"
					echo "Tag: ${tag}"
					sh "./scripts/release.sh ${env.DOCKER_PEGB_REGISTRY} ${env.DOCKER_PEGB_REGISTRY_AWS} ${version} ${tag}"

//					echo 'Deploying...'
//					rancher confirm: true, credentialId: 'rancher', endpoint: "${env.RANCHER_ENDPOINT}",
//					environmentId: "${env.RANCHER_PROJECT_ID}", environments: '',
//					image: "${env.DOCKER_PEGB_REGISTRY}/back-office/web-client:${version}",
//					ports: '5000:5000,5001:5001', service: 'back-office/web-client',
//					timeout: 120
				}
			}
		}
	}
}
